help:
  - name: Basic overview
    description: >-
      HUD Manager allows you to create infinite HUD layouts and
      dynamically swap to them based on in-game conditions.
  - name: What is the staging slot?
    description: >-
      The staging slot is the in-game HUD slot that the plugin will
      update. For example, if it is set to 4, your in-game HUD slot
      will always be 4 while the plugin is active. The plugin will
      update that slot with whichever layout is appropriate when
      necessary.
  - name: What is a layout parent? How does inheritance work?
    description: >-
      Every layout created by HUD Manager may have a parent. Layouts
      with parents are called child layouts. Child layouts inherit all
      HUD elements from all of their parents but can override
      them. This system allows for you to create one base layout and
      have several variations. When you update the base layout, all
      the variations will reflect that update automatically without
      any extra work on your part.

      For example, imagine a layout called "Default" and a layout
      called "Battle". The Battle layout is a child of the Default
      layout and is set to turn on in combat. The Battle layout has
      one HUD element added: gil, and gil is hidden. The Default
      layout has gil visible. When not in combat, gil will be visible,
      but when entering combat, gil will be hidden. This is because
      the Battle layout inherits all the HUD elements from the Default
      layout, but it overrides the gil HUD element to hide it during
      combat.
  - name: How does layering work?
    description: >-
      When enabled, Layout layering (accessed by enabling "advanced 
      mode" in the Swap menu) allows for any HUD layout to be layered 
      on top of the active HUD. This is useful for applying a persistent
      element in certain scenarios, while still allowing normal HUD
      swaps to happen.

      As an example, imagine a setup with 2 layouts. The first is
      a minimalist layout, whereas the second is a combat-oriented layout.
      They are set up to swap on the "Weapon drawn" condition. This works
      well, but there is an issue: the Duty element is hidden on both of these
      layouts, causing issues when trying to access FATEs. The solution here
      is to create a new layout with no parent and a single element: the Duty
      List element, set to be visible. They then apply this layout with the Layered
      option checked, on the condition of "In FATE zone", as a swap, placed at the 
      very top of the list. Now, with this set-up, the Duty List will appear whenever
      they are near a FATE, however their normal sheathing/unsheathing swap will also
      work!
  - name: Why do my hotbars keep appearing/disappearing when visibility is disabled?
    description: >-
      Please make sure that any hotbar with a visibility that the
      plugin is not supposed to change has its visibility disabled in
      all layouts. This means if you want Hotbar 1's visibility to not
      be managed by the plugin, and you use layout C, which is
      underneath layout A and B, you must set Hotbar 1's visibility to
      disabled in layouts A, B, and C.

      Additionally, due to HUD shenanigans, you cannot use /hotbar
      display X on/off to toggle hotbar visibility. Please use /hud
      HotbarX instead. This will fix your issue.